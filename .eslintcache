[{"C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\index.tsx":"1","C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\rootSaga.ts":"2","C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\reducers\\todoListReducer\\todolists-reducer.ts":"3","C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\reducers\\appReducer\\app-actions.ts":"4","C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\component\\Login\\Login.tsx":"5","C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\sagas\\app-sagas.ts":"6","C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\sagas\\auth-sagas.ts":"7","C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\component\\Todolist\\Todolist.tsx":"8","C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\api\\todoAPI.ts":"9","C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\component\\Todolist\\Tasks\\Tasks.tsx":"10","C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\component\\Todolist\\Task\\Task.tsx":"11","C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\reducers\\todoListReducer\\todolist-actions.ts":"12","C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\sagas\\todoList-sagas.ts":"13"},{"size":702,"mtime":1619177239124,"results":"14","hashOfConfig":"15"},{"size":318,"mtime":1620751182072,"results":"16","hashOfConfig":"15"},{"size":1468,"mtime":1620752934576,"results":"17","hashOfConfig":"15"},{"size":1122,"mtime":1620749605917,"results":"18","hashOfConfig":"15"},{"size":3343,"mtime":1620751281379,"results":"19","hashOfConfig":"15"},{"size":651,"mtime":1620749613876,"results":"20","hashOfConfig":"15"},{"size":1395,"mtime":1620751156175,"results":"21","hashOfConfig":"15"},{"size":3874,"mtime":1618832068568,"results":"22","hashOfConfig":"15"},{"size":1491,"mtime":1618838619025,"results":"23","hashOfConfig":"15"},{"size":1662,"mtime":1620755400644,"results":"24","hashOfConfig":"15"},{"size":1933,"mtime":1618832068597,"results":"25","hashOfConfig":"15"},{"size":2665,"mtime":1620755400540,"results":"26","hashOfConfig":"15"},{"size":3029,"mtime":1620755400651,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ebizps",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\index.tsx",[],"C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\rootSaga.ts",[],"C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\reducers\\todoListReducer\\todolists-reducer.ts",[],"C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\reducers\\appReducer\\app-actions.ts",[],"C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\component\\Login\\Login.tsx",["55"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    FormLabel,\r\n    Grid,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport * as Yup from 'yup';\r\nimport {useFormik} from 'formik';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStoreType} from '../../redux/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {login} from '../../redux/reducers/authReducer/auth-actions';\r\n\r\nconst Login = () => {\r\n    const {isLogged} = useSelector((state: RootStoreType) => state.auth )\r\n\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string().email('Invalid email address').required('Required'),\r\n            password: Yup.string().min(2, 'Password must be 2 characters or more').required('Required')\r\n        }),\r\n        onSubmit: values => {\r\n            dispatch(login(values))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if (isLogged) {\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n    return (\r\n        <Grid container alignItems={'center'} justify={'center'}>\r\n            <Grid item>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}> here</a>\r\n                        </p>\r\n                        <p>or using test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                margin=\"normal\"\r\n                                {...formik.getFieldProps('email')}\r\n                                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText={formik.touched.email && formik.errors.email}\r\n                            />\r\n                            <TextField\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                margin=\"normal\"\r\n                                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText={formik.touched.password && formik.errors.password}\r\n                                {...formik.getFieldProps('password')}\r\n                            />\r\n                            <FormControlLabel\r\n                                label={'Remember me'}\r\n                                control={<Checkbox/>}\r\n                                {...formik.getFieldProps('rememberMe')}\r\n                            />\r\n                            <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                        </FormGroup>\r\n                    </form>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\sagas\\app-sagas.ts",[],"C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\sagas\\auth-sagas.ts",[],"C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\component\\Todolist\\Todolist.tsx",[],"C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\api\\todoAPI.ts",[],"C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\component\\Todolist\\Tasks\\Tasks.tsx",[],"C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\component\\Todolist\\Task\\Task.tsx",[],"C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\reducers\\todoListReducer\\todolist-actions.ts",[],"C:\\Frontend\\React\\petProjects\\main\\TodoList\\my-app\\src\\redux\\sagas\\todoList-sagas.ts",[],{"ruleId":"56","severity":1,"message":"57","line":50,"column":32,"nodeType":"58","endLine":50,"endColumn":49},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute"]