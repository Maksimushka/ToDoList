[{"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\store.ts":"1","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\index.tsx":"2","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\App.tsx":"3","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\todoListReducer\\todolists-reducer.ts":"4","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\tasksReducer\\tasks-reducer.ts":"5","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\authReducer\\auth-actions.ts":"6","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\ErrorSnackbar\\ErrorSnackBar.tsx":"7","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\utils\\error-utils.ts":"8","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\AddItemForm\\AddItemForm.tsx":"9","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\todoListReducer\\todolist-actions.ts":"10","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\Todolist\\Tasks\\Tasks.tsx":"11","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\Todolist\\Task\\Task.tsx":"12","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\tasksReducer\\tasks-actions.ts":"13","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\appReducer\\app-reducer.ts":"14","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\authReducer\\auth-reducer.ts":"15","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\appReducer\\app-actions.ts":"16","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\Login\\Login.tsx":"17","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\TodoListsList\\TodoListsList.tsx":"18","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\api\\todoAPI.ts":"19","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\todoListReducer\\todolist-thunk.ts":"20","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\Todolist\\Todolist.tsx":"21","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\tasksReducer\\tasks-thunk.ts":"22","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\EditableSpan\\EditableSpan.tsx":"23","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\api\\tasksAPI.ts":"24"},{"size":656,"mtime":1618833341304,"results":"25","hashOfConfig":"26"},{"size":702,"mtime":1619177239124,"results":"27","hashOfConfig":"26"},{"size":2515,"mtime":1619177232672,"results":"28","hashOfConfig":"26"},{"size":1454,"mtime":1618832068576,"results":"29","hashOfConfig":"26"},{"size":2169,"mtime":1618832068584,"results":"30","hashOfConfig":"26"},{"size":1566,"mtime":1618838635187,"results":"31","hashOfConfig":"26"},{"size":1162,"mtime":1618832068546,"results":"32","hashOfConfig":"26"},{"size":835,"mtime":1618837325633,"results":"33","hashOfConfig":"26"},{"size":1560,"mtime":1618414560752,"results":"34","hashOfConfig":"26"},{"size":1487,"mtime":1618832068537,"results":"35","hashOfConfig":"26"},{"size":1672,"mtime":1618473449755,"results":"36","hashOfConfig":"26"},{"size":1933,"mtime":1618832068597,"results":"37","hashOfConfig":"26"},{"size":1740,"mtime":1618832068375,"results":"38","hashOfConfig":"26"},{"size":890,"mtime":1618837325598,"results":"39","hashOfConfig":"26"},{"size":506,"mtime":1618832604842,"results":"40","hashOfConfig":"26"},{"size":1407,"mtime":1618837325606,"results":"41","hashOfConfig":"26"},{"size":3353,"mtime":1618833457145,"results":"42","hashOfConfig":"26"},{"size":2317,"mtime":1618838982969,"results":"43","hashOfConfig":"26"},{"size":1491,"mtime":1618838619025,"results":"44","hashOfConfig":"26"},{"size":2547,"mtime":1618832068383,"results":"45","hashOfConfig":"26"},{"size":3874,"mtime":1618832068568,"results":"46","hashOfConfig":"26"},{"size":3762,"mtime":1618832068808,"results":"47","hashOfConfig":"26"},{"size":1356,"mtime":1618467889585,"results":"48","hashOfConfig":"26"},{"size":1694,"mtime":1617902959884,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"zl5xel",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\store.ts",[],["103","104"],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\index.tsx",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\App.tsx",[],["105","106"],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\todoListReducer\\todolists-reducer.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\tasksReducer\\tasks-reducer.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\authReducer\\auth-actions.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\ErrorSnackbar\\ErrorSnackBar.tsx",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\utils\\error-utils.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\AddItemForm\\AddItemForm.tsx",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\todoListReducer\\todolist-actions.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\Todolist\\Tasks\\Tasks.tsx",["107"],"import React, {useCallback} from 'react';\r\nimport {Task} from '../Task/Task';\r\nimport {deleteTaskTC, updateTaskTC,} from '../../../redux/reducers/tasksReducer/tasks-thunk';\r\nimport {TaskStatus, TaskType} from '../../../api/tasksAPI';\r\nimport {useDispatch} from 'react-redux';\r\nimport {ObjectStatusType} from '../../../redux/reducers/tasksReducer/tasks-reducer';\r\n\r\ntype TasksPropsType = {\r\n    tasks: ObjectStatusType[]\r\n    todoId: string\r\n}\r\n\r\nconst Tasks: React.FC<TasksPropsType> = React.memo((props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const removeTask = useCallback((id: string, todolistId: string) => {\r\n        dispatch(deleteTaskTC(todolistId, id))\r\n    }, [dispatch])\r\n    const changeStatus = useCallback((id: string, status: TaskStatus, todolistId: string) => {\r\n        dispatch(updateTaskTC(todolistId, id, {status}))\r\n    }, [dispatch])\r\n    const changeTaskTitle = useCallback((title: string, id: string, todolistId: string) => {\r\n        dispatch(updateTaskTC(todolistId, id, {title}))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                props.tasks.map(el => {\r\n                    return <Task\r\n                        taskObjectStatus={el.objectStatus}\r\n                        taskId={el.id}\r\n                        title={el.title}\r\n                        status={el.status}\r\n                        todoId={props.todoId}\r\n                        changeTaskTitle={changeTaskTitle}\r\n                        changeStatus={changeStatus}\r\n                        removeTask={removeTask}\r\n                        key={el.id}/>\r\n                })\r\n            }\r\n        </>\r\n    );\r\n})\r\n\r\nexport default Tasks;","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\Todolist\\Task\\Task.tsx",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\tasksReducer\\tasks-actions.ts",[],["108","109"],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\appReducer\\app-reducer.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\authReducer\\auth-reducer.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\appReducer\\app-actions.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\Login\\Login.tsx",["110"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    FormLabel,\r\n    Grid,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport * as Yup from 'yup';\r\nimport {useFormik} from 'formik';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {setLoginTC} from '../../redux/reducers/authReducer/auth-actions';\r\nimport {RootStoreType} from '../../redux/store';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const {isLogged} = useSelector((state: RootStoreType) => state.auth )\r\n\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string().email('Invalid email address').required('Required'),\r\n            password: Yup.string().min(2, 'Password must be 2 characters or more').required('Required')\r\n        }),\r\n        onSubmit: values => {\r\n            dispatch(setLoginTC(values))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n    if (isLogged) {\r\n        return <Redirect to={'/'} />\r\n    }\r\n\r\n    return (\r\n        <Grid container alignItems={'center'} justify={'center'}>\r\n            <Grid item>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}> here</a>\r\n                        </p>\r\n                        <p>or using test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <FormGroup>\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                margin=\"normal\"\r\n                                {...formik.getFieldProps('email')}\r\n                                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText={formik.touched.email && formik.errors.email}\r\n                            />\r\n                            <TextField\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                margin=\"normal\"\r\n                                error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                helperText={formik.touched.password && formik.errors.password}\r\n                                {...formik.getFieldProps('password')}\r\n                            />\r\n                            <FormControlLabel\r\n                                label={'Remember me'}\r\n                                control={<Checkbox/>}\r\n                                {...formik.getFieldProps('rememberMe')}\r\n                            />\r\n                            <Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n                        </FormGroup>\r\n                    </form>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\TodoListsList\\TodoListsList.tsx",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\api\\todoAPI.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\todoListReducer\\todolist-thunk.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\Todolist\\Todolist.tsx",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\reducers\\tasksReducer\\tasks-thunk.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\EditableSpan\\EditableSpan.tsx",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\api\\tasksAPI.ts",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":4,"column":21,"nodeType":"119","messageId":"120","endLine":4,"endColumn":29},{"ruleId":"111","replacedBy":"121"},{"ruleId":"113","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":50,"column":32,"nodeType":"125","endLine":50,"endColumn":49},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],"@typescript-eslint/no-unused-vars","'TaskType' is defined but never used.","Identifier","unusedVar",["126"],["127"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]