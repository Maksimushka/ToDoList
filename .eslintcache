[{"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\serviceWorker.ts":"1","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\App.tsx":"2","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\Todolist\\Todolist.tsx":"3","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\index.tsx":"4","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\Todolist\\AddItemForm.tsx":"5","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\EditableSpan\\EditableSpan.tsx":"6","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\state\\tasks-reducer.ts":"7","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\state\\todolists-reducer.ts":"8","C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\store.ts":"9"},{"size":5295,"mtime":1587586615167,"results":"10","hashOfConfig":"11"},{"size":4461,"mtime":1615397972057,"results":"12","hashOfConfig":"11"},{"size":3742,"mtime":1613490702407,"results":"13","hashOfConfig":"11"},{"size":465,"mtime":1591461812687,"results":"14","hashOfConfig":"11"},{"size":1432,"mtime":1613492252012,"results":"15","hashOfConfig":"11"},{"size":1147,"mtime":1613492252003,"results":"16","hashOfConfig":"11"},{"size":3469,"mtime":1615397200123,"results":"17","hashOfConfig":"11"},{"size":2538,"mtime":1615396837158,"results":"18","hashOfConfig":"11"},{"size":373,"mtime":1615394763165,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v4tzde",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\serviceWorker.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\App.tsx",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\Todolist\\Todolist.tsx",[],["42","43"],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\index.tsx",[],["44","45"],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\Todolist\\AddItemForm.tsx",["46"],"import s from \"./Todolist.module.css\";\r\nimport React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\r\nimport {Button, IconButton, TextField} from \"@material-ui/core\";\r\nimport {AddBox} from \"@material-ui/icons\";\r\n\r\ntype AddItemFormType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport function AddItemForm(props: AddItemFormType) {\r\n\r\n    let [title, setTitle] = useState<string>(\"\")\r\n    let [error, setError] = useState<string>(\"\")\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title)\r\n            setTitle(\"\")\r\n            setError(\"\")\r\n        } else {\r\n            setError(\"Please, enter your task!\")\r\n            setTitle(\"\")\r\n        }\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => { setTitle(e.currentTarget.value) }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => { if (e.charCode === 13)  addItem() }\r\n\r\n    return (\r\n        <div className={s.input}>\r\n            <TextField\r\n                value={title}\r\n                label={'Type value'}\r\n                variant={'outlined'}\r\n                onChange={ onChangeHandler }\r\n                onKeyPress={ onKeyPressHandler }\r\n                error={ !!error }\r\n                helperText={ error }\r\n            />\r\n            <IconButton color='primary'  onClick={ addItem }>\r\n                <AddBox />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}",["47","48"],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\component\\EditableSpan\\EditableSpan.tsx",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\state\\tasks-reducer.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\state\\todolists-reducer.ts",[],"C:\\Frontend\\React\\main\\TodoList\\my-app\\src\\redux\\store.ts",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":3,"column":9,"nodeType":"57","messageId":"58","endLine":3,"endColumn":15},{"ruleId":"49","replacedBy":"59"},{"ruleId":"51","replacedBy":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["61"],["62"],"no-global-assign","no-unsafe-negation"]